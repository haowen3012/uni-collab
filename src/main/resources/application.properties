#==================================
# = Datasource
#==================================
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.type.descriptor.sql=trace
spring.jpa.hibernate.ddl-auto= create-drop
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/uni-collab
spring.datasource.username=postgres
spring.sql.init.data-locations = classpath:import.sql
spring.datasource.password=12302001oK
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.globally_quoted_identifiers=true
#==================================
# = Web server
#==================================
server.port=8081
server.error.whitelabel.enabled=false
server.error.include-stacktrace=always
#==================================
# = Thymeleaf configurations
#==================================
spring.thymeleaf.check-template-location=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.servlet.content-type=text/html
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true
spring.thymeleaf.encoding=UTF-8
#==================================
# = messages
#==================================
spring.messages.basename=messages/message
#==================================
# = Spring Security
#==================================
spring.security.oauth2.client.registration.google.client-id=985094395817-63h7d5gp2l63j207n5eull4enluehfcv.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile
#=======Facebook===============
spring.security.oauth2.client.registration.facebook.client-id=759355385895917
spring.security.oauth2.client.registration.facebook.client-secret=fcb3490b989b5b3db0d69f6306ad2547


#=======Github===============
spring.security.oauth2.client.registration.github.clientId=2e1ace0c6e345c63bb81
spring.security.oauth2.client.registration.github.client-secret=b21d17c0fd8c01916a785b67b36fb4ca2f2eb740
spring.security.oauth2.client.registration.github.scope=user:email, read:user
#spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/login/oauth2/user
#=======linkedin===============
#spring.security.oauth2.client.registration.linkedin.client-id==778xmnkba91v76
#spring.security.oauth2.client.registration.linkedin.client-secret=ZzT2vWHIDVIB083U
#spring.security.oauth2.client.registration.linkedin.authorization-grant-type=authorization_code
#spring.security.oauth2.client.provider.linkedin.authorization-uri=https://www.linkedin.com/oauth/v2/authorization
#spring.security.oauth2.client.provider.linkedin.token-uri=https://www.linkedin.com/oauth/v2/accessToken
#spring.security.oauth2.client.provider.linkedin.user-info-uri=https://api.linkedin.com/v2/me?projection=(id,firstName,lastName,profilePicture(displayImage~:playableStreams))
#spring.security.oauth2.client.provider.linkedin.user-name-attribute=firstName
#spring.security.oauth2.client.registration.linkedin.scope=r_liteprofile r_emailaddress




